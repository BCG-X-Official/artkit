[tox]
envlist = py311
skip_missing_interpreters = true
isolated_build = true
minversion = 3.11
distshare= {toxinidir}/dist/tox

[testenv]
changedir = .
passenv = *
setenv =
    PYTHONPATH = {toxinidir}{:}{toxinidir}/test
    PIP_DISABLE_PIP_VERSION_CHECK = 1

# We change the install command to build packages from source that depend on numpy's
# binary API.
# This is necessary to prevent the notorious "RuntimeError: module compiled against API
# version 0x… but this version of numpy is 0x…" error.
install_command =
    python -m pip install {opts} {packages} --no-binary '{env:ARTKIT_NO_BINARY}'

extras =
    testing

commands =
    # print all installed packages to stdout
    python -m pip freeze
    # run the tests
    pytest test/ -s

[testenv:{py311}-custom-deps]
deps =
    aiolimiter{env:ARTKIT_V_AIOLIMITER}
    matplotlib{env:ARTKIT_V_MATPLOTLIB}
    pandas{env:ARTKIT_V_PANDAS}
    fluxus{env:ARTKIT_V_FLUXUS}
    gamma-pytools{env:ARTKIT_V_GAMMA_PYTOOLS}
    typing_inspect{env:ARTKIT_V_TYPING_INSPECT}

[flake8]

# Max line length for code
max-line-length = 88
# Max line length for docstrings
max-doc-length = 88

show-source = true

ignore =
    # line too long (140 > 88 characters)
    E501,
    # line break after binary operator
    W504,
    # invalid escape sequence '\.'
    W605,
    # do not assign a lambda expression, use a def
    E731,
    # ignore not easy to read variables like i l I etc
    E741,
    # Unnecessary (dict/list/tuple) call - rewrite as a literal
    C408,
    # Module level import not at top of file
    E402,

    # Ignores below are added to prevent conflicts with Black formatter
    # Missing whitespace after ',', ';', or ':'
    E231,
    # space before :
    E203,
    # line break before binary operator
    W503,

per-file-ignores =
    __init__.py: F401, F403, F405
    api.py: F401, F403

exclude =
    .eggs/*.py,
    venv/*,
    .venv/*,
    .git/*

[isort]
profile=black
src_paths=src,test
known_local_folder=test
known_first_party=pytools
known_third_party=numpy,pandas,joblib,matplot
case_sensitive = True

[pytest]
pythonpath=src
testpaths=test/artkit_test
log_cli_level=DEBUG
log_cli=true
cache_dir=.pytest_cache
